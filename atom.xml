<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>屈志刚’s blogs</title>
  
  <subtitle>克己慎独 守心明性</subtitle>
  <link href="https://www.quzhigang.com/atom.xml" rel="self"/>
  
  <link href="https://www.quzhigang.com/"/>
  <updated>2024-03-31T12:06:14.815Z</updated>
  <id>https://www.quzhigang.com/</id>
  
  <author>
    <name>屈志刚</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java概述</title>
    <link href="https://www.quzhigang.com/2024/03/31/Java%E6%A6%82%E8%BF%B0/"/>
    <id>https://www.quzhigang.com/2024/03/31/Java%E6%A6%82%E8%BF%B0/</id>
    <published>2024-03-31T11:48:35.000Z</published>
    <updated>2024-03-31T12:06:14.815Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="Java程序设计概述"><a href="#Java程序设计概述" class="headerlink" title="Java程序设计概述"></a>Java程序设计概述</h1><h2 id="java起源"><a href="#java起源" class="headerlink" title="java起源"></a>java起源</h2><p>java起源于Sun Microsystems公司，在1995年正式发布。它的设计初衷是取代C和C++成为计算机领域的通用编程语言，同时也能够解决C和C++语言在互联网时代面临的一些问题，如内存泄漏、跨平台性等。</p><h2 id="java发展史"><a href="#java发展史" class="headerlink" title="java发展史"></a>java发展史</h2><table><thead><tr><th>版  本</th><th>年份</th><th>语言新特性</th></tr></thead><tbody><tr><td>1.0</td><td>1996</td><td>语言本身</td></tr><tr><td>1.1</td><td>1997</td><td>内部类</td></tr><tr><td>1.2</td><td>1998</td><td>stricfp装饰符</td></tr><tr><td>1.3</td><td>2000</td><td></td></tr><tr><td>1.4</td><td>2002</td><td>断言</td></tr><tr><td>5.0</td><td>2004</td><td>泛型类、增强 foreach、可变参数、自动装箱、元数据、枚举、静态导入</td></tr><tr><td>6</td><td>2006</td><td></td></tr><tr><td>7</td><td>2011</td><td>基于字符串的 Switch、钻石操作符&lt;&gt;、二进制字面量、异常处理改进</td></tr><tr><td>8</td><td>2014</td><td>lambda表达式、接口默认方法、Stream流、新的时间&#x2F;日期库</td></tr><tr><td>9</td><td>2017</td><td>模块化系统、接口私有方法、改进try-with-resource、改进Javadoc支持HTML5、多版本兼容jars、集合工厂方法和流新增API、改进Optional类新增API</td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h2 id="java语言特性"><a href="#java语言特性" class="headerlink" title="java语言特性"></a>java语言特性</h2><blockquote><p><strong>简单性:</strong> </p></blockquote><p>Java语法是C++的一个”纯净“版本。没有头文件、指针运算（甚至指针语法）、结构、联合、操作符重载、虚基类等，整体语法简单，学习曲线平滑，并且Java加入了垃圾回收机制，解决了程序员需要管理内存的问题，使得Java语言变得更简单易用。</p><blockquote><p><strong>面向对象:</strong> </p></blockquote><p>Java 是一种面向对象的语言，它对对象中的类、对象、继承、封装、多态、接口、包等均有很好的支持。为了简单起见，Java 只支持类之间的单继承，但是可以使用接口来实现多继承。</p><blockquote><p><strong>分布式:</strong> </p></blockquote><p>Java 语言支持 Internet 应用的开发，在 Java 的基本应用编程接口中就有一个网络应用编程接口，它提供了网络应用编程的类库，包括 URL、URLConnection、Socket 等。Java 的 RIM 机制也是开发分布式应用的重要手段。</p><blockquote><p><strong>健壮性:</strong> </p></blockquote><p>Java语言具有较强的错误检测和处理能力，能有效防止一些安全问题，如内存泄漏、空指针异常等。</p><blockquote><p><strong>安全性:</strong> </p></blockquote><p>Java提供了沙箱机制，使得在其内部运行的程序受到一定程度的隔离和限制，从而保护系统安全。</p><blockquote><p><strong>体系结构中立:</strong> </p></blockquote><p>Java程序可以不加修改在所有支持Java的平台运行，这意味着Java语言不依赖任何的操作系统活硬件体系。</p><blockquote><p><strong>可移植性:</strong> </p></blockquote><p>Java程序可以在不同的操作系统、硬件平台和设备上运行，实现“一次编写，到处运行”的理念。</p><blockquote><p><strong>解释型:</strong> </p></blockquote><p>Java 程序在 Java 平台运行时会被编译成字节码文件，然后可以在有 Java 环境的操作系统上运行。在运行文件时，Java 的解释器对这些字节码进行解释执行，执行过程中需要加入的类在连接阶段被载入到运行环境中。</p><blockquote><p><strong>高性能:</strong> </p></blockquote><pre><code>Java虚拟机通过即时编译技术（JIT）将字节码转换为本地机器码，提高程序的运行速度。</code></pre><blockquote><p><strong>多线程:</strong> </p></blockquote><pre><code>Java原生支持多线程编程，可以轻松实现并发程序的设计。</code></pre><blockquote><p><strong>动态性:</strong> </p></blockquote><pre><code>Java支持动态加载和运行时反射，使得程序具有更大的灵活性和动态性。</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h1 id=&quot;Java程序设计概述&quot;&gt;&lt;a href=&quot;#Java程序设计概述&quot; class=&quot;headerlink&quot; title=&quot;Java程序设计概述&quot;&gt;&lt;/a&gt;Java程序设计概述&lt;/h1&gt;&lt;h2 id=&quot;java起源&quot;&gt;&lt;a href=&quot;#java起源&quot; cl</summary>
      
    
    
    
    
    <category term="Java" scheme="https://www.quzhigang.com/tags/Java/"/>
    
  </entry>
  
</feed>
